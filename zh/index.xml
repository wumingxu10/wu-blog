<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:webfeeds="http://webfeeds.org/rss/1.0" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>wumingxu</title>
    <link>https://www.wumingxu.online/zh/</link>
    <description>Recent content on wumingxu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 03 Mar 2024 16:01:23 +0800</lastBuildDate>
    
    <atom:link href="https://www.wumingxu.online/zh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>關於</title>
      <link>https://www.wumingxu.online/zh/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://www.wumingxu.online/zh/about/</guid>
      <description>Hugo 是個靜態網頁產生器。 它利用了一些開放原始碼的專案像是： Cobra Viper J Walter Weatherman Cast 了解並貢獻： GitHub.</description>
      <content:encoded><![CDATA[<p>Hugo 是個靜態網頁產生器。</p>
<p>它利用了一些開放原始碼的專案像是：</p>
<ul>
<li><a href="https://github.com/spf13/cobra">Cobra</a></li>
<li><a href="https://github.com/spf13/viper">Viper</a></li>
<li><a href="https://github.com/spf13/jWalterWeatherman">J Walter Weatherman</a></li>
<li><a href="https://github.com/spf13/cast">Cast</a></li>
</ul>
<p>了解並貢獻： <a href="https://github.com/gohugoio">GitHub</a>.</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>nxp mpc5744 gitlab-ci自动构建</title>
      <link>https://www.wumingxu.online/zh/2024/03/03/nxp-mpc5744-gitlab-ci%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA/</link>
      <pubDate>Sun, 03 Mar 2024 16:01:23 +0800</pubDate>
      
      <guid>https://www.wumingxu.online/zh/2024/03/03/nxp-mpc5744-gitlab-ci%E8%87%AA%E5%8A%A8%E6%9E%84%E5%BB%BA/</guid>
      <description>该文档通过gitlab-runner搭建nxp mpc5744自动构建功能。 编译环境搭建 编译方案 nxp s32ds 基于eclipse二次开发，所以无论是S3</description>
      <content:encoded><![CDATA[<p>该文档通过gitlab-runner搭建nxp mpc5744自动构建功能。</p>
<h1 id="编译环境搭建">编译环境搭建</h1>
<ul>
<li><strong>编译方案</strong></li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/1.png" alt="编译方案"></p>
<p>nxp s32ds 基于eclipse二次开发，所以无论是S32 Design Studio for Power Architecture Version 2(后面简称上s32ds_pa_ide)还是其他架构版本的都是可以通过命令行对项目进行编译，为了方便在服务器上部署，所以<strong>本方案选择将s32ds_pa_ide做成docker image</strong>。</p>
<ul>
<li>
<p><strong>制作s32ds_pa_ide的docker image</strong></p>
<blockquote>
<p>s32ds_pa_ide 目前只支持通过gui安装，无法通过命令行安装，参考<a href="https://community.nxp.com/t5/S32-Design-Studio/How-to-install-S32DS-3-4-into-a-docker-image-command-line/m-p/1803876#M11843">官方论坛的帖子</a>可以将安装完成的s32ds_pa_ide打包后拷贝到docker image里。</p>
</blockquote>
<ul>
<li>
<p>下载linux安装包并根据安装指导书在自己的虚拟机上完成ide安装</p>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/2.png" alt=""></p>
</li>
<li>
<p>将整个s32ds_pa_ide打包成压缩包S32DS_Power_v2.1.tar.gz，并上传服务器，与Dockerfile同级目录</p>
<p>Dockerfile内容如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-dockerfile" data-lang="dockerfile"><span class="line"><span class="cl"><span class="k">FROM</span><span class="s"> ubuntu:16.04 as installer</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">RUN</span> dpkg --add-architecture i386 <span class="o">&amp;&amp;</span> apt-get update <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="o">&amp;&amp;</span> apt-get install -y <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    lib32z1 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libncurses5:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libstdc++6:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libbz2-1.0:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libc6:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libx11-6:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libxpm4:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    openjdk-8-jre <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    openjfx <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libwebkitgtk-1.0-0 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    tcl <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    libpython2.7:i386 <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    tofrodos <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    unzip <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>    make <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span><span class="o">&amp;&amp;</span> rm -rf /var/lib/apt/lists/*<span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">WORKDIR</span><span class="s"> /home/</span><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err">
</span></span></span><span class="line"><span class="cl"><span class="err"></span><span class="k">ADD</span> S32DS_Power_v2.1.tar.gz .<span class="err">
</span></span></span></code></pre></div></li>
<li>
<p>编译生成<!-- raw HTML omitted -->docker image<!-- raw HTML omitted --></p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">docker build -t s32ds_pa_ide .
</span></span></code></pre></div></li>
</ul>
</li>
</ul>
<h1 id="gitlab-ci搭建">gitlab-ci搭建</h1>
<h2 id="gitlab-runner创建和注册">gitlab-runner创建和注册</h2>
<p>在服务器上基于docker创建一个gitlab-runner容器，并且ci/cd执行器为docker</p>
<ul>
<li>获取gitlab-runner register 的url、token</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/3.png" alt=""></p>
<ul>
<li>
<p>根据自己的要求修改/etc/gitlab-runner挂载到宿主机的路径，并修改url、token后执行</p>
<blockquote>
<p>其中  &ndash;executor &ldquo;docker&rdquo;   &ndash;docker-image s32ds_pa_ide:latest  根据<a href="#1">编译环境搭建</a>最终生成的image修改</p>
</blockquote>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="cp">#! /bin/bash
</span></span></span><span class="line"><span class="cl"><span class="cp"></span>
</span></span><span class="line"><span class="cl">docker run -d --net host --name mpc5744-runner --restart always <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     -v /home/project/gitlab-runner/config:/etc/gitlab-runner <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     -v /var/run/docker.sock:/var/run/docker.sock <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>     gitlab/gitlab-runner:latest
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">docker run -it --rm -v /home/wumingxu/project/can2io/gitlab-runner/config:/etc/gitlab-runner gitlab/gitlab-runner register <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --non-interactive <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --executor <span class="s2">&#34;docker&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --docker-privileged <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --docker-image s32ds_pa_ide:latest <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --url <span class="s2">&#34;xxxxxx&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --registration-token <span class="s2">&#34;xxxxxxx&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --description <span class="s2">&#34;build-runner&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --tag-list <span class="s2">&#34;build&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --run-untagged<span class="o">=</span><span class="s2">&#34;true&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --locked<span class="o">=</span><span class="s2">&#34;false&#34;</span> <span class="se">\
</span></span></span><span class="line"><span class="cl"><span class="se"></span>  --access-level<span class="o">=</span><span class="s2">&#34;not_protected&#34;</span>
</span></span></code></pre></div><ul>
<li>
<p>成功后可在gitlab对应位置看到注册的runner</p>
</li>
<li>
<p>修改/home/project/gitlab-runner/config/config.toml，默认镜像拉取策略always，总是通过docker register拉取，由于我们的镜像是在本地制作，所以修改镜像拉取策略，将 pull_policy = [&ldquo;if-not-present&rdquo;]加到 [runners.docker]下面</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl"><span class="o">[[</span>runners<span class="o">]]</span>
</span></span><span class="line"><span class="cl">  <span class="nv">name</span> <span class="o">=</span> <span class="s2">&#34;build-runner&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">url</span> <span class="o">=</span> <span class="s2">&#34;xxxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">id</span> <span class="o">=</span> <span class="m">7</span>
</span></span><span class="line"><span class="cl">  <span class="nv">token</span> <span class="o">=</span> <span class="s2">&#34;xxxxxx&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="nv">token_obtained_at</span> <span class="o">=</span> 2024-04-09T01:42:55Z
</span></span><span class="line"><span class="cl">  <span class="nv">token_expires_at</span> <span class="o">=</span> 0001-01-01T00:00:00Z
</span></span><span class="line"><span class="cl">  <span class="nv">executor</span> <span class="o">=</span> <span class="s2">&#34;docker&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="o">[</span>runners.cache<span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">MaxUploadedArchiveSize</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">  <span class="o">[</span>runners.docker<span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">pull_policy</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&#34;if-not-present&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">tls_verify</span> <span class="o">=</span> <span class="nb">false</span>
</span></span><span class="line"><span class="cl">    <span class="nv">image</span> <span class="o">=</span> <span class="s2">&#34;s32ds_pa_ide:latest&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="nv">privileged</span> <span class="o">=</span> <span class="nb">true</span>
</span></span><span class="line"><span class="cl">    <span class="nv">disable_entrypoint_overwrite</span> <span class="o">=</span> <span class="nb">false</span>
</span></span><span class="line"><span class="cl">    <span class="nv">oom_kill_disable</span> <span class="o">=</span> <span class="nb">false</span>
</span></span><span class="line"><span class="cl">    <span class="nv">disable_cache</span> <span class="o">=</span> <span class="nb">false</span>
</span></span><span class="line"><span class="cl">    <span class="nv">volumes</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&#34;/cache&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">    <span class="nv">shm_size</span> <span class="o">=</span> <span class="m">0</span>
</span></span><span class="line"><span class="cl">    <span class="nv">network_mtu</span> <span class="o">=</span> <span class="m">0</span>
</span></span></code></pre></div></li>
</ul>
<h2 id="gitlab-ciyml编写">.gitlab-ci.yml编写</h2>
<ul>
<li>
<p>在项目添加以下.gitlab-ci.yml文件，其中$PROJECT_CFG、$PROJECT_NAME通过gitlab ci/cd 变量设定</p>
<blockquote>
<p>关于.gitlab-ci.yml语法见<a href="https://docs.gitlab.cn/jh/ci/yaml/">官方手册</a></p>
<p>image关键字指定所在job是基于我们自己编译的s32ds_pa_ide docker image执行的</p>
<p>script调用的编译命令用法参考该链接<a href="https://mcuoneclipse.com/2014/09/12/building-projects-with-eclipse-from-the-command-line/">Building Projects with Eclipse from the Command Line | MCU on Eclipse</a></p>
</blockquote>
</li>
</ul>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">stages</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">build</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">build</span><span class="p">:</span><span class="w"> </span><span class="c"># 编译阶段</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">stage</span><span class="p">:</span><span class="w"> </span><span class="l">build</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">only</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">main</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">tags</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">build</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">image</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">s32ds_pa_ide</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">pull_policy</span><span class="p">:</span><span class="w"> </span><span class="l">if-not-present</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">script</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span>- <span class="l">/home/S32DS_Power_v2.1/eclipse/s32ds -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -import ./ -cleanBuild &#34;$PROJECT_NAME/$PROJECT_CFG&#34; --launcher.ini /home/S32DS_Power_v2.1/eclipse/s32ds.ini --launcher.suppressErrors</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">artifacts</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="nt">paths</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">     </span>- <span class="l">$PROJECT_CFG/$PROJECT_NAME.elf</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">     </span>- <span class="l">$PROJECT_CFG/$PROJECT_NAME.srec</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  
</span></span></span></code></pre></div><ul>
<li>
<p>gitlab ci/cd 变量设定取决于s32ds ide里具体的工程名及配置</p>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/4.png" alt=""></p>
</li>
</ul>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/5.png" alt=""></p>
<p>PROJECT_NAME  对应  boot_mpc5744</p>
<p>PROJECT_CFG  对应  Debug_FLASH</p>
<ul>
<li>
<p>下载编译产物</p>
<p><img src="https://cdn.jsdelivr.net/gh/wumingxu10/wu-image/6.png" alt=""></p>
</li>
</ul>
]]></content:encoded>
    </item>
    
    <item>
      <title>標頭圖片</title>
      <link>https://www.wumingxu.online/zh/2018/03/05/%E6%A8%99%E9%A0%AD%E5%9C%96%E7%89%87/</link>
      <pubDate>Mon, 05 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://www.wumingxu.online/zh/2018/03/05/%E6%A8%99%E9%A0%AD%E5%9C%96%E7%89%87/</guid>
      <description>這是一個簡單的筆記。</description>
      <content:encoded><![CDATA[<p>這是一個簡單的筆記。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>筆記 2</title>
      <link>https://www.wumingxu.online/zh/2018/03/04/%E7%AD%86%E8%A8%98-2/</link>
      <pubDate>Sun, 04 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://www.wumingxu.online/zh/2018/03/04/%E7%AD%86%E8%A8%98-2/</guid>
      <description>這是一個簡單的筆記。</description>
      <content:encoded><![CDATA[<p>這是一個簡單的筆記。</p>
]]></content:encoded>
    </item>
    
    <item>
      <title>筆記 1</title>
      <link>https://www.wumingxu.online/zh/2018/03/03/%E7%AD%86%E8%A8%98-1/</link>
      <pubDate>Sat, 03 Mar 2018 16:01:23 +0800</pubDate>
      
      <guid>https://www.wumingxu.online/zh/2018/03/03/%E7%AD%86%E8%A8%98-1/</guid>
      <description>這是一個簡單的筆記。</description>
      <content:encoded><![CDATA[<p>這是一個簡單的筆記。</p>
]]></content:encoded>
    </item>
    
  </channel>
</rss>